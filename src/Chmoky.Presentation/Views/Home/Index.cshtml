@{
    ViewBag.Title = "Top 10";
}
<h2>@ViewBag.Title</h2>

<div class="container-fluid">
    <div class="row">
        <div class="col-lg-6">
            <h5>Participants: <span id="participants"></span></h5>
            <h5>Messages Count: <span id="count"></span></h5>
            <h5>Messages Length: <span id="total"></span></h5>
        </div>
        <div class="col-lg-6">
            <h5>Min Message: <span id="min"></span></h5>
            <h5>Max Message: <span id="max"></span></h5>
            <h5>Avg Message: <span id="avg"></span></h5>
        </div>
    </div>
</div>

<div class="table-responsive">
    <div class="fixed-table-toolbar">
        <div class="bars pull-left">
            <div id="header-toolbar">
                <button type="button" class="btn btn-default " id="next">Next</button>
                <button type="button" class="btn btn-primary " id="current">Current</button>
                <button type="button" class="btn btn-default " id="previous">Previous</button>
            </div>
        </div>
    </div>
    <table class="table table-hover table-striped"
            id="topGodel"
            data-toggle="table"
            data-query-params="postQueryParams"
            data-method="post"
            data-content-type="application/x-www-form-urlencoded"
            data-side-pagination="server"
            data-pagination="true"
            data-page-size="10"
            data-page-list="[10, 20, 50, 100, 200]"
            data-sort-order="desc"
            data-sort-name="total_just_text"
            data-striped="true"
            data-show-loading="true"
            data-cache="false">
        <thead>
            <tr>
                <th data-field="RowNum" data-halign="center">#</th>
                <th data-field="FullName" data-halign="center" >Person</th>
                <th data-field="Author" data-formatter="authorFormatter" data-halign="center">Skype ID</th>
                <th data-field="count" data-formatter="numberFormatter" data-sortable="true" data-align="right" data-halign="center">Messages<br />Count</th>
                <th data-field="total_just_text" data-formatter="numberFormatter" data-sortable="true" data-align="right" data-halign="center">Messages<br />Length</th>
                <th data-field="min_just_text" data-formatter="numberFormatter" data-sortable="true" data-align="right" data-halign="center">Min<br />Message</th>
                <th data-field="max_just_text" data-formatter="numberFormatter" data-sortable="true" data-align="right" data-halign="center">Max<br />Message</th>
                <th data-field="avg_just_text" data-formatter="numberFormatter" data-sortable="true" data-align="right" data-halign="center">Avg<br />Message</th>
            </tr>
        </thead>
    </table>
</div>

@section scripts
{
    <script src="~/bundles/indexView"></script>

    <script>
        var shortMonthNames = ["Jan", "Feb", "Mar", "Apr", "May", "Jun",
            "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"
        ];

        var monthNames = ["January", "February", "March", "April", "May", "June",
            "July", "August", "September", "October", "November", "December"
        ];

        var currentDate = Date.today().add(-1).month();

        $topGodel = $('#topGodel');

        function getCaptionFromDate(date) {
            return shortMonthNames[date.getMonth()] + " " + date.getFullYear();
        }

        function changeButtonsCaptions() {
            $('#current').html("Statistics for " + getCaptionFromDate(currentDate));

            $('#previous').html(getCaptionFromDate(new Date(currentDate).add(-1).month()));

            $('#next').html(getCaptionFromDate(new Date(currentDate).add(1).month()));
        }

        function postQueryParams(params) {
            params.currentDate = currentDate.toJSON();
            return params;
        }

        function authorFormatter(value) {
            return '<a data-toggle="popover" data-trigger="hover" href="/Home/Messages?author=' + value.SkypeID + '" data-content="'
                + value.SkypeNames + '" title= "Skype Name" data-html="true" class="" >' + value.SkypeID + '</a>';
        }

        function numberFormatter(value) {
            if (value === null) return null;
            return value.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ",");
        }

        function getUrlVars() {
            var vars = [], hash;
            var hashes = window.location.href.slice(window.location.href.indexOf('?') + 1).split('&');
            for (var i = 0; i < hashes.length; i++) {
                hash = hashes[i].split('=');
                vars.push(hash[0]);
                vars[hash[0]] = hash[1];
            }
            return vars;
        }

        function setUrlVars() {
            if (history.pushState) {
                var options = $topGodel.bootstrapTable('getOptions');
                params = postQueryParams(options);
                var query = 'month=' + params.currentDate.substring(0, 7)
                    + '&sortName=' + params.sortName
                    + '&sortOrder=' + params.sortOrder
                    + '&page=' + params.pageNumber
                    + '&size=' + params.pageSize;
                var newurl = window.location.protocol + "//" + window.location.host + window.location.pathname + '?' + query;
                window.history.pushState({ path: newurl }, '', newurl);
            }
        }

        function setTableOptionsByUrlVars() {
            var urlVars = getUrlVars();
            var month = urlVars['month'];
            var page = urlVars['page'];
            var size = urlVars['size'];
            var sort = urlVars['sortName'];
            var order = urlVars['sortOrder'];

            if (month != undefined) {
                var currentMonth = new Date(month + "-01");
                if (!isNaN(currentMonth)) currentDate = currentMonth;
            }

            // check that pageNumber is valid
            if (page != undefined && $.isNumeric(page)) {
                // pageNumber has to be numeric to be highlighted by bootstrap table
                $topGodel.bootstrapTable('refreshOptions', { pageNumber: parseInt(page) });
            }

            // check that pageSize is valid
            if (size != undefined && $.isNumeric(size)) {
                $topGodel.bootstrapTable('refreshOptions', { pageSize: size });
            }

            // can the table be sorted by specified fields
            if (sort != undefined) {
                sort = sort.toLowerCase();
                $.each($topGodel.bootstrapTable('getOptions').columns[0], function (index, column) {
                    if (column.sortable && column.field.toLowerCase() == sort) {
                        $topGodel.bootstrapTable('refreshOptions', { sortName: sort });
                    }
                });
            }

            // is sort order valid
            if (order != undefined) {
                order = order.toLowerCase();
                if (order == "asc" || order == "desc") {
                    $topGodel.bootstrapTable('refreshOptions', { sortOrder: order });
                }
            }
        }

        $(document).ready(function () {
            $topGodel
                .on('all.bs.table', function (e, name, args) {
                    $('[data-toggle="tooltip"]').tooltip();
                    $('[data-toggle="popover"]').popover();
                })
                .on('load-success.bs.table', function (e, data) {
                    $('#participants').html(numberFormatter(data.total));
                    $('#total').html(numberFormatter(data.textLength));
                    $('#count').html(numberFormatter(data.count));
                    $('#min').html(numberFormatter(data.min));
                    $('#max').html(numberFormatter(data.max));
                    $('#avg').html(numberFormatter(data.avg));
                    setUrlVars();
                });

            $('#previous').click(function () {
                currentDate = new Date(currentDate).add(-1).month();
                $topGodel.bootstrapTable('refresh');
                changeButtonsCaptions();
            });

            $('#next').click(function () {
                currentDate = new Date(currentDate).add(1).month();
                $topGodel.bootstrapTable('refresh');
                changeButtonsCaptions();
            });

            setTableOptionsByUrlVars();

            changeButtonsCaptions();

            $topGodel.bootstrapTable('refresh', { url: "/Home/GetTop" })
        });

    </script>
}
